import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { NavBar, SidePanel } from '../components';
import { Link } from 'react-router-dom';
import { pinksweater, clearArrow } from '../assets';
import { useAuth } from '../context/AuthContext';

const InstructorPage = () => {
  const [courses, setCourses] = useState([]);
  const [newCourse, setNewCourse] = useState({ title: '', description: '', category: '', price: '' });
  const [editingCourse, setEditingCourse] = useState(null);

  useEffect(() => {
    const fetchCourses = async () => {
      const response = await axios.get('http://127.0.0.1:8000/api/courses/');
      setCourses(response.data);
    };

    fetchCourses();
  }, []);

  const handleChange = (e) => {
    setNewCourse({ ...newCourse, [e.target.name]: e.target.value });
  };

  const handleCreate = async () => {
    const response = await axios.post('http://127.0.0.1:8000/api/course/create/', newCourse);
    setCourses([...courses, response.data]);
    setNewCourse({ title: '', description: '', category: '', price: '' });
  };

  const handleEditChange = (e) => {
    setEditingCourse({ ...editingCourse, [e.target.name]: e.target.value });
  };

  const handleUpdate = async () => {
    const response = await axios.put(`http://127.0.0.1:8000/api/course/${editingCourse.id}/update/`, editingCourse);
    setCourses(courses.map(course => (course.id === editingCourse.id ? response.data : course)));
    setEditingCourse(null);
  };

  const handleDelete = async (id) => {
    await axios.delete(`http://127.0.0.1:8000/api/course/${id}/delete/`);
    setCourses(courses.filter(course => course.id !== id));
  };

  return (
    <div>
    <NavBar {...navbarProps} />
    <div className='flex'>
      <SidePanel />
      <div className='w-full h-[43.8vw] overflow-y-auto'>
        <div className='flex gap-[1vw]'>
          <div className='w-[31vw] top-[17vw] left-[8vw] mt-[11vw] ml-[5vw]'>
            <p className='text-strathmore-red text-[3vw] font-semibold leading-[4vw]'>
              {username ? `${username}, Keep learning at a safe and steady pace.` : 'Keep learning at a safe and steady pace.'}
            </p>
            <p className='text-strathmore-grey font-semibold mt-[2vw] mb-[2.2vw] text-[1.05vw]'>
              <span className='text-nav-blue'>Expert-led courses</span> across a variety of <span className='text-nav-blue'>online class topics</span> for every step of your career. Instructors with real-world experience.
            </p>
            <div className='flex gap-[2.8vw] justify-center'>
              <div className='w-[11vw] h-[2.8vw] bg-nav-blue text-center rounded-[0.6vw] leading-[2.6vw] cursor-pointer font-semibold text-white drop-shadow text-[1vw] border-[0.15vw] border-white hover:scale-105 transition-transform'>
                <p>Start my free Month</p>
              </div>
              <div className='w-[11vw] h-[2.8vw] border-[0.15vw] border-strathmore-grey text-center rounded-[0.6vw] leading-[2.6vw] cursor-pointer font-semibold text-strathmore-grey text-[1vw] hover:scale-105 transition-transform'>
                <p>Buy for my Team</p>
              </div>
            </div>
          </div>
          <div>
            <img src={pinksweater} className='h-[35vw] mt-[6vw]' />
          </div>
        </div>
        {sectionTitle.map((section, index) => (
          <div className='mb-[3vw]' key={index}>
            <div className='border w-full h-[8.5vw] bg-opacity-20 bg-strathmore-grey'>
              <p className='text-strathmore-red text-[3vw] mt-[1.8vw] ml-[8vw]'>
                {section.title}
              </p>
            </div>
            <div>
              <div className='flex justify-end gap-[0.5vw] mr-[2vw] mt-[1.3vw]'>
                <img src={clearArrow} className='h-[2vw] rotate-180 cursor-pointer' />
                <img src={clearArrow} className='h-[2vw] cursor-pointer' />
              </div>
              <div className='flex justify-center mt-[1.2vw]'>
                <div className='border w-[80vw] py-[2vw] flex'>
                  <div className='flex gap-[2vw] overflow-x-auto'>
                    <div className='w-[0vw] h-[1vw] bg-black'></div>
                    <Link className='flex gap-[2vw]' to='/dl-lms/LearnCoursePage'>
                      {section.coursesImages.map((image, i) => (
                        <div key={i} className='cursor-pointer flex-shrink-0 hover:scale-105 transition-transform mt-[1vw]'>
                          <img src={image} className='h-[9vw]' alt={section.courseText[i]} />
                          <div className='flex ml-[1.5vw] text-[1vw] font-bold mt-[0.7vw]'>
                            <div>
                              <p className='text-strathmore-grey font-semibold mt-[-0.4vw] mb-[0.2vw] text-[0.95vw]'>
                                Course
                              </p>
                              <p>{section.courseText[i]}</p>
                              <div className='flex text-[0.8vw] my-[0.2vw]'>
                                <p className='text-[0.7vw] text-strathmore-grey mb-[1vw]'>
                                  By: {section.byWho[i]}
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      ))}
                    </Link>
                    <div className='w-[0vw] h-[1vw] bg-black'></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
);
};
export default InstructorPage;
